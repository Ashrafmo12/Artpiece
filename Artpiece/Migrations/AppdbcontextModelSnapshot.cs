// <auto-generated />
using System;
using Artpiece;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Artpiece.Migrations
{
    [DbContext(typeof(Appdbcontext))]
    partial class AppdbcontextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Artpiece.Models.Artpiecee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LoyaltyCardId")
                        .HasColumnType("int");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("loyalityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("LoyaltyCardId");

                    b.ToTable("Artpieces");
                });

            modelBuilder.Entity("Artpiece.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Artpiece.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LoyalityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("Artpiece.Models.LoyaltyCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Balance")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LoyaltyCards");
                });

            modelBuilder.Entity("Artpiece.Models.Artpiecee", b =>
                {
                    b.HasOne("Artpiece.Models.Category", "Category")
                        .WithMany("Artists")
                        .HasForeignKey("CategoryId");

                    b.HasOne("Artpiece.Models.Customer", "Customer")
                        .WithMany("Artists")
                        .HasForeignKey("CustomerId");

                    b.HasOne("Artpiece.Models.LoyaltyCard", "LoyaltyCard")
                        .WithMany("artpieces")
                        .HasForeignKey("LoyaltyCardId");

                    b.Navigation("Category");

                    b.Navigation("Customer");

                    b.Navigation("LoyaltyCard");
                });

            modelBuilder.Entity("Artpiece.Models.Category", b =>
                {
                    b.Navigation("Artists");
                });

            modelBuilder.Entity("Artpiece.Models.Customer", b =>
                {
                    b.Navigation("Artists");
                });

            modelBuilder.Entity("Artpiece.Models.LoyaltyCard", b =>
                {
                    b.Navigation("artpieces");
                });
#pragma warning restore 612, 618
        }
    }
}
